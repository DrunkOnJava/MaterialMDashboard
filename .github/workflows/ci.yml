name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Check TypeScript
      run: npm run type-check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm test -- --coverage
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: dist/
        retention-days: 7

  analyze-bundle:
    name: Analyze Bundle Size
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Analyze bundle size
      run: npm run build -- --mode production
    
    - name: Upload bundle stats
      uses: actions/upload-artifact@v3
      with:
        name: bundle-stats
        path: dist/stats.html
        if-no-files-found: ignore

  lighthouse:
    name: Lighthouse Performance Audit
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: dist/
    
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v12
      with:
        urls: |
          http://localhost:3000
        uploadArtifacts: true
        temporaryPublicStorage: true
        
    - name: Format lighthouse score
      id: format_lighthouse_score
      uses: actions/github-script@v7
      with:
        script: |
          const result = ${{ steps.lighthouse.outputs.manifest }}[0].summary
          const links = ${{ steps.lighthouse.outputs.links }}
          
          const formatResult = (res) => Math.round((res * 100))
          Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
          
          const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
          
          const comment = [
            `‚ö°Ô∏è Lighthouse report for the changes in this PR:`,
            `| Category | Score |`,
            `| --- | --- |`,
            `| ${score(result.performance)} Performance | ${result.performance} |`,
            `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
            `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
            `| ${score(result.seo)} SEO | ${result.seo} |`,
            `| ${score(result.pwa)} PWA | ${result.pwa} |`,
            ` `,
            `*Lighthouse ran on [${Object.keys(links)[0]}](${Object.keys(links)[0]})*`
          ].join('\n')
          
          core.setOutput("comment", comment);

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts
        path: dist/
    
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
        overwrites-pull-request-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      timeout-minutes: 10